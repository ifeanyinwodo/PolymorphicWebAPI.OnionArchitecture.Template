// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: itemcategories.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace PolymorphicWebAPI.Service.Features.GRPC {
  public static partial class ItemCategories
  {
    static readonly string __ServiceName = "itemcategories.ItemCategories";

    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));
    static readonly grpc::Marshaller<global::PolymorphicWebAPI.Service.Features.GRPC.GetAllCategories> __Marshaller_itemcategories_GetAllCategories = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::PolymorphicWebAPI.Service.Features.GRPC.GetAllCategories.Parser));
    static readonly grpc::Marshaller<global::PolymorphicWebAPI.Service.Features.GRPC.GetCategoryRequest> __Marshaller_itemcategories_GetCategoryRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::PolymorphicWebAPI.Service.Features.GRPC.GetCategoryRequest.Parser));
    static readonly grpc::Marshaller<global::PolymorphicWebAPI.Service.Features.GRPC.Category> __Marshaller_itemcategories_Category = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::PolymorphicWebAPI.Service.Features.GRPC.Category.Parser));

    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::PolymorphicWebAPI.Service.Features.GRPC.GetAllCategories> __Method_Get = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::PolymorphicWebAPI.Service.Features.GRPC.GetAllCategories>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "Get",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_itemcategories_GetAllCategories);

    static readonly grpc::Method<global::PolymorphicWebAPI.Service.Features.GRPC.GetCategoryRequest, global::PolymorphicWebAPI.Service.Features.GRPC.GetAllCategories> __Method_GetCategory = new grpc::Method<global::PolymorphicWebAPI.Service.Features.GRPC.GetCategoryRequest, global::PolymorphicWebAPI.Service.Features.GRPC.GetAllCategories>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "GetCategory",
        __Marshaller_itemcategories_GetCategoryRequest,
        __Marshaller_itemcategories_GetAllCategories);

    static readonly grpc::Method<global::PolymorphicWebAPI.Service.Features.GRPC.Category, global::PolymorphicWebAPI.Service.Features.GRPC.Category> __Method_Post = new grpc::Method<global::PolymorphicWebAPI.Service.Features.GRPC.Category, global::PolymorphicWebAPI.Service.Features.GRPC.Category>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Post",
        __Marshaller_itemcategories_Category,
        __Marshaller_itemcategories_Category);

    static readonly grpc::Method<global::PolymorphicWebAPI.Service.Features.GRPC.Category, global::PolymorphicWebAPI.Service.Features.GRPC.Category> __Method_Update = new grpc::Method<global::PolymorphicWebAPI.Service.Features.GRPC.Category, global::PolymorphicWebAPI.Service.Features.GRPC.Category>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Update",
        __Marshaller_itemcategories_Category,
        __Marshaller_itemcategories_Category);

    static readonly grpc::Method<global::PolymorphicWebAPI.Service.Features.GRPC.GetCategoryRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_Remove = new grpc::Method<global::PolymorphicWebAPI.Service.Features.GRPC.GetCategoryRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Remove",
        __Marshaller_itemcategories_GetCategoryRequest,
        __Marshaller_google_protobuf_Empty);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::PolymorphicWebAPI.Service.Features.GRPC.ItemcategoriesReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for ItemCategories</summary>
    public partial class ItemCategoriesClient : grpc::ClientBase<ItemCategoriesClient>
    {
      /// <summary>Creates a new client for ItemCategories</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public ItemCategoriesClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for ItemCategories that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public ItemCategoriesClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected ItemCategoriesClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected ItemCategoriesClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual grpc::AsyncServerStreamingCall<global::PolymorphicWebAPI.Service.Features.GRPC.GetAllCategories> Get(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Get(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::PolymorphicWebAPI.Service.Features.GRPC.GetAllCategories> Get(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_Get, null, options, request);
      }
      public virtual grpc::AsyncServerStreamingCall<global::PolymorphicWebAPI.Service.Features.GRPC.GetAllCategories> GetCategory(global::PolymorphicWebAPI.Service.Features.GRPC.GetCategoryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCategory(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::PolymorphicWebAPI.Service.Features.GRPC.GetAllCategories> GetCategory(global::PolymorphicWebAPI.Service.Features.GRPC.GetCategoryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_GetCategory, null, options, request);
      }
      public virtual global::PolymorphicWebAPI.Service.Features.GRPC.Category Post(global::PolymorphicWebAPI.Service.Features.GRPC.Category request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Post(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::PolymorphicWebAPI.Service.Features.GRPC.Category Post(global::PolymorphicWebAPI.Service.Features.GRPC.Category request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Post, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::PolymorphicWebAPI.Service.Features.GRPC.Category> PostAsync(global::PolymorphicWebAPI.Service.Features.GRPC.Category request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PostAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::PolymorphicWebAPI.Service.Features.GRPC.Category> PostAsync(global::PolymorphicWebAPI.Service.Features.GRPC.Category request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Post, null, options, request);
      }
      public virtual global::PolymorphicWebAPI.Service.Features.GRPC.Category Update(global::PolymorphicWebAPI.Service.Features.GRPC.Category request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Update(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::PolymorphicWebAPI.Service.Features.GRPC.Category Update(global::PolymorphicWebAPI.Service.Features.GRPC.Category request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Update, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::PolymorphicWebAPI.Service.Features.GRPC.Category> UpdateAsync(global::PolymorphicWebAPI.Service.Features.GRPC.Category request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::PolymorphicWebAPI.Service.Features.GRPC.Category> UpdateAsync(global::PolymorphicWebAPI.Service.Features.GRPC.Category request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Update, null, options, request);
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty Remove(global::PolymorphicWebAPI.Service.Features.GRPC.GetCategoryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Remove(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty Remove(global::PolymorphicWebAPI.Service.Features.GRPC.GetCategoryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Remove, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> RemoveAsync(global::PolymorphicWebAPI.Service.Features.GRPC.GetCategoryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> RemoveAsync(global::PolymorphicWebAPI.Service.Features.GRPC.GetCategoryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Remove, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override ItemCategoriesClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new ItemCategoriesClient(configuration);
      }
    }

  }
}
#endregion
